Hooks Basics
=============================================================================

It is possible to run scripts before and after every build. In general, these
should be build-server specific tasks since theses steps are not reproducable
with your git repository. Something like firing up a display or starting an
Amazon EC2 instance.

To enable a hook, you have to create the appropriate directory and place the
hook in it. Name the directories like your configuration with the "-pre.d"
and "-post.d" postfix:
  /etc/gitce/myproject
  /etc/gitce/myproject-pre.d/my-pre-hook.sh
  /etc/gitce/myproject-post.d/my-post-hook.sh


Available Hooks
=============================================================================

  * mail.sh

    A mail notification hook which sends failure mails on every failing build
    to all developers having a commit since the last build and one recovery
    mail as soon as the build builds again.

    $ ln -s ...hooks/mail.sh /etc/gitce/example-post.d/10_mail.sh


  * clearwork.sh

    Clears the content of the build directory after every build to save disk
    space.

    $ ln -s ...hooks/clearwork.sh /etc/gitce/example-post.d/99_clearwork.sh


  * vnc/

    Starts and stops a VNC server for every build. To enable the hook, set
    up the VNC_DISPLAY configuration like "VNC_DISPLAY=:100".

    $ ln -s ...hooks/vnc.sh /etc/gitce/example-pre.d/50_vnc.sh
    $ ln -s ...hooks/vnc.sh /etc/gitce/example-post.d/50_vnc.sh
    $ echo "export DISPLAY=:30" >> /etc/gitce/example

